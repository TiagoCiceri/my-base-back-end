Projeto RSXP:
PS C:\PrjPraticar\RocketSeat\Adonis-RSXP> adonis new backend --api-only --yarn
    _       _             _         _
   / \   __| | ___  _ __ (_)___    | |___
  / _ \ / _` |/ _ \| '_ \| / __|_  | / __|
 / ___ \ (_| | (_) | | | | \__ \ |_| \__ \
/_/   \_\__,_|\___/|_| |_|_|___/\___/|___/

  [1/6] �  Requirements matched [node & npm]
  [2/6] �  Ensuring project directory is clean [backend]
  [3/6] �  Cloned [adonisjs/adonis-api-app]
  [4/6] �  Dependencies installed
  [5/6] �  Environment variables copied [.env]
  [6/6] �  Key generated [adonis key:generate]

�   Successfully created project
�   Get started with the following commands

$ cd backend
$ adonis serve --dev
--------
Testes:
adonis install @adonisjs/vow --yarn
Após colar o provider mostrado no Browser, criar o env.test, copiar o exemplo do .env.example e na sequencia rodar o comando
adonis key:generate
Isso irá gera um APP_KEY=0zwStei7GdOuSjkFGUt3le3dLL4amhbl no arquivo .env

SQLite: (Ambiente de Desenvolvimento)
yarn add sqlite3 -D

PostgrSQL:  (Ambiente de Produção)
yarn add pg

Criando o Controller
adonis make:controller nome-controller
adonis make:controller Session
adonis make:controller ForgotPassword
adonis make:controller ResetPassword
adonis make:controller File

Criando o Model, Controller e Migration
adonis make:model Workshop -m -c
adonis make:model File -m -c

Controlar E-mail:
adonis install @adonisjs/mail --yarn
Observação: o e-mail usa a parte de VIEW do Adonis então devemos adicionar o PROVIDER no app.js
const providers = [
  '@adonisjs/framework/providers/ViewProvider'
]

Plugin VSCode:
Edge template support

Trabalhando com Data:
yarn add date-fns

Instalar o ESlint
yarn add eslint -D
yarn eslint --init 
yarn add prettier eslint-config-prettier eslint-plugin-prettier -D
yarn eslint --fix app --ext .js

Validações:
adonis install @adonisjs/validator --yarn
const providers = [
  '@adonisjs/validator/providers/ValidatorProvider'
]
adonis make:validator Session
adonis make:validator Workshop

Migrations:
adonis migration:run
Para resetar tudo pode ser usar o REFRESH
adonis migration:refresh


Rodar o Servidor:
adonis serve --dev

Como criar um usuário pelo Adonis utilizando o Models:
adonis repl  (tecle enter...)
const User = use('App/Models/User')   (tecle enter...)
User.create({username: "Anderson Tiago", email: "tiagociceri@gemail.com", password: "123456"})
User.create({username:"Priscila Ciceri", email:"priciceri@gmail.com", password: "123456"})

Testar serviço de email ( mailtrap ) criar uma conta

Criação de Provider:
adonis make:provider CustomValidation

Internacionalização:
adonis install @adonisjs/antl --yarn
const providers = [
  '@adonisjs/antl/providers/AntlProvider'
]